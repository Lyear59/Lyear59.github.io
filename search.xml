<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hello world</title>
    <url>/2020/04/24/hello-world/</url>
    <content><![CDATA[<h1 id="最开始的啰嗦"><a href="#最开始的啰嗦" class="headerlink" title="最开始的啰嗦"></a>最开始的啰嗦</h1><p>&emsp;&emsp;貌似学编程最开始都喜欢搞一个输出<code>hello world</code>来代表学习的开始，像是一种仪式。那这个博客也不要例外咯。</p>
<p>&emsp;&emsp;之前考研的时候跟qzh讲过，我是烂泥扶不上墙，这句话最开始是听初中班主任陈老师说的。上了大学感觉我也是这种人了，没有环境氛围的带动，我也就变得无所事事。真是一个没有目标没有<strong>规划</strong>的人。现在想想没有规划真的可怕。对我来说，无所事事的时候很容易就去刷虎扑、玩游戏，我在这两项事情上浪费太多时间了（<del>有点贤者模式的嫌疑</del>）。不是说游戏不可以玩、虎扑不能看，但确实是要<strong>做好规划</strong>，要明确近期、长期要完成什么事情。不然看不到未来啊——大学过去的这几年就是最好的证明。不学无术。</p>
<p>好在现在又多了3年可以折腾，这下真的要好好规划一下了。</p>
]]></content>
      <tags>
        <tag>啰嗦</tag>
      </tags>
  </entry>
  <entry>
    <title>高校信息爬虫</title>
    <url>/2020/07/07/%E9%AB%98%E6%A0%A1%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<h1 id="高校信息爬虫"><a href="#高校信息爬虫" class="headerlink" title="高校信息爬虫"></a>高校信息爬虫</h1><h3 id="一、目标-目的"><a href="#一、目标-目的" class="headerlink" title="一、目标/目的"></a>一、目标/目的</h3><p>从<a href="https://gaokao.chsi.com.cn/sch/search--ss-on,option-qg,searchType-1,start-0.dhtml" target="_blank" rel="noopener">学信网的院校信息库</a>中爬取国内高校的信息：学校名称、校徽图片、所在地、类型（综合/工科/医科、92、双一流等），并存储下来。</p>
<h3 id="二、遇到的坑"><a href="#二、遇到的坑" class="headerlink" title="二、遇到的坑"></a>二、遇到的坑</h3><ol>
<li>同一网页（部分院校主要信息页面，以<a href="https://gaokao.chsi.com.cn/sch/schoolInfoMain--schId-1.dhtml" target="_blank" rel="noopener">北京大学</a>为例）电脑端和手机端显示的内容不一样：手机端全都是显示该学校的校徽，而电脑端上，有些学校显示的是校徽，而有些显示的是该学校某个建筑的照片。</li>
</ol>
<p>![pc端院校信息](C:\Users\Lai Yu\lyear\source_posts\pc端院校信息.png)</p>
<ul>
<li><p>解决：将上述<a href="https://gaokao.chsi.com.cn/sch/search--ss-on,option-qg,searchType-1,start-0.dhtml" target="_blank" rel="noopener">学信网的院校信息库</a>网页（<a href="https://gaokao.chsi.com.cn/sch/search--ss-on,option-qg,searchType-1,start-0.dhtml）先在手机浏览器打开，此时发现手机浏览器上该网页的网址变成https://gaokao.chsi.com.cn/wap/sch/schlist，很重要的是那个，直接将移动端的这个wap版网页的网址在pc端打开，页面内容就变了。所以后续的爬虫应该就是直接爬移动端网页的内容。" target="_blank" rel="noopener">https://gaokao.chsi.com.cn/sch/search--ss-on,option-qg,searchType-1,start-0.dhtml）先在手机浏览器打开，此时发现手机浏览器上该网页的网址变成https://gaokao.chsi.com.cn/wap/sch/schlist，很重要的是那个，直接将移动端的这个wap版网页的网址在pc端打开，页面内容就变了。所以后续的爬虫应该就是直接爬移动端网页的内容。</a></p>
<p>  ![移动端院校列表](C:\Users\Lai Yu\lyear\source_posts\移动端院校列表.png)</p>
</li>
</ul>
<ol start="2">
<li>该移动端网页是异步加载的，也就是动态加载，爬到的网页数据并没有一栏栏的院校信息，而且在浏览器上加载新的信息时，url不改变。</li>
</ol>
<h3 id="三、过程"><a href="#三、过程" class="headerlink" title="三、过程"></a>三、过程</h3><h4 id="1-解析网页"><a href="#1-解析网页" class="headerlink" title="1. 解析网页"></a>1. 解析网页</h4><p><a href="https://gaokao.chsi.com.cn/wap/sch/schlist" target="_blank" rel="noopener">移动端网页</a>F12，发现每个学校的tag都是一样的：gk-yxklist-item van-cell</p>
<p>![奇妙的class](C:\Users\Lai Yu\lyear\source_posts\奇妙的class.png)</p>
<p>那不就好办？先全爬下来，再用BeautifulSoup一层层找需要的tag：院校名、logo、所在地、头衔……</p>
<p>![一层层的tag](C:\Users\Lai Yu\lyear\source_posts\一层层的tag.png)</p>
<p>一顿操作发现没那么简单。又用xpath解析，先一层层地找logo所在的tag：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">div_list = tree.xpath(<span class="string">'//div[@class="gk-content"]/div/div/div/div'</span>)</span><br></pre></td></tr></table></figure>

<p>发现还是不行：</p>
<p>![坑①](C:\Users\Lai Yu\lyear\source_posts\坑①.png)</p>
<p>那就先看一下获取到的网页页面是怎样的：</p>
<p>![坑②](C:\Users\Lai Yu\lyear\source_posts\坑②.png)</p>
<p>这才发现，通过requests获取的这个页面，根本没有获取到院校信息，就直接报“请求失败，点击重新加载”了。这是什么原因？？？是因为手机版网页的问题？还是其用于加载院校信息的javascript函数的问题？这个一时半会还真的了解不来。重新打开<a href="https://gaokao.chsi.com.cn/wap/sch/schlist" target="_blank" rel="noopener">该网页</a>，发现确实先出现“加载中…”，加载一小会才出来<code>class=&quot;gk-layout&quot;</code>下的内容；此时我也才注意到确实有个class名为<code>loading-bg</code>的模块是这个加载的：</p>
<p>![load](C:\Users\Lai Yu\lyear\source_posts\load.png)</p>
<p>然后又在想是不是被反爬虫机制拦了，可是我加了headers呀，而且也没报403……</p>
<p>接着了解到（<a href="https://www.oschina.net/question/3776788_2274324）可能是该网页js异步加载的原因。" target="_blank" rel="noopener">https://www.oschina.net/question/3776788_2274324）可能是该网页js异步加载的原因。</a></p>
<blockquote>
<p>异步加载：异步加载又叫非阻塞，浏览器在下载执行 js 同时，还会继续进行后续页面的处理。</p>
</blockquote>
<h4 id="2-分析Ajax请求"><a href="#2-分析Ajax请求" class="headerlink" title="2. 分析Ajax请求"></a>2. 分析Ajax请求</h4><p>从<a href="https://blog.csdn.net/duxu24/article/details/51917076" target="_blank" rel="noopener">爬虫抓取网站异步加载数据<em>困而学之，学思并重-CSDN博客</em></a>上了解到XHR这个东西，在这个网页上F12→Network→XHR→找到schsearch，在Preview中可以看到，想要的院校信息就在这里。。</p>
<blockquote>
<p>XHR，全称为XMLHttpRequest，用于与服务器交互数据，是AJAX功能实现所依赖的对象，jquery中的AJAX就是对 XHR的封装。</p>
<p>AJAX即“Asynchronous Javascript And XML”（异步JavaScript和XML），是指一种创建交互式网页应用的网页开发技术，是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。</p>
</blockquote>
<p>![XHR](C:\Users\Lai Yu\lyear\source_posts\XHR.png)</p>
<p>可以看到，这里的院校信息包括了：院校名称、所在地区（<del>ssmc不知道是什么名称</del>）、主管部门、院校类型、院校代码、以及标识一流大学、一流学科等。</p>
<p>那就先爬<code>院校名称、所在地区、院校代码、一流大学建设高校、一流学科建设高校</code>这几个我需要的信息吧，至于985/211和学校logo，后面再想办法。</p>
<p>先XHR里找到<code>schsearch</code>，查看对应的Headers，可以看到它的<code>Request URL</code>：![headers](C:\Users\Lai Yu\lyear\source_posts\headers.png)</p>
<p>先按这个URL爬下数据来看看：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取院校院校名称、所在地区、院校代码、一流大学建设高校、一流学科建设高校等信息</span></span><br><span class="line">headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36'</span>&#125;</span><br><span class="line">url = <span class="string">'https://gaokao.chsi.com.cn/wap/sch/schsearch'</span></span><br><span class="line">data = requests.get(url=url, headers=headers).text</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure>

<p>发现就是刚才在Preview那里看到的那些院校信息，也就是Json串：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"msg"</span>:&#123;<span class="attr">"totalCount"</span>:<span class="number">2817</span>,<span class="attr">"pageCount"</span>:<span class="number">10</span>,<span class="attr">"list"</span>:[</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"1"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北京大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"教育部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"综合院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科"</span>,<span class="attr">"yldx"</span>:<span class="literal">true</span>,<span class="attr">"ylxk"</span>:<span class="literal">false</span>,<span class="attr">"yjsy"</span>:<span class="literal">true</span>,<span class="attr">"avgRank"</span>:<span class="number">4.7</span>,<span class="attr">"yxdm"</span>:<span class="string">"10001"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"2"</span>,<span class="attr">"yxmc"</span>:<span class="string">"中国人民大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"教育部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"综合院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科"</span>,<span class="attr">"yldx"</span>:<span class="literal">true</span>,<span class="attr">"ylxk"</span>:<span class="literal">false</span>,<span class="attr">"yjsy"</span>:<span class="literal">true</span>,<span class="attr">"avgRank"</span>:<span class="number">4.8</span>,<span class="attr">"yxdm"</span>:<span class="string">"10002"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"3"</span>,<span class="attr">"yxmc"</span>:<span class="string">"清华大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"教育部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"综合院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科"</span>,<span class="attr">"yldx"</span>:<span class="literal">true</span>,<span class="attr">"ylxk"</span>:<span class="literal">false</span>,<span class="attr">"yjsy"</span>:<span class="literal">true</span>,<span class="attr">"avgRank"</span>:<span class="number">4.8</span>,<span class="attr">"yxdm"</span>:<span class="string">"10003"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"4"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北京交通大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"教育部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"工科院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科/高职(专科)"</span>,<span class="attr">"yldx"</span>:<span class="literal">false</span>,<span class="attr">"ylxk"</span>:<span class="literal">true</span>,<span class="attr">"yjsy"</span>:<span class="literal">true</span>,<span class="attr">"avgRank"</span>:<span class="number">4.4</span>,<span class="attr">"yxdm"</span>:<span class="string">"10004"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"5"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北京工业大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"北京市教育委员会"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"工科院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科/高职(专科)"</span>,<span class="attr">"yldx"</span>:<span class="literal">false</span>,<span class="attr">"ylxk"</span>:<span class="literal">true</span>,<span class="attr">"yjsy"</span>:<span class="literal">false</span>,<span class="attr">"avgRank"</span>:<span class="number">4.4</span>,<span class="attr">"yxdm"</span>:<span class="string">"10005"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"6"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北京航空航天大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"工业和信息化部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"工科院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科"</span>,<span class="attr">"yldx"</span>:<span class="literal">true</span>,<span class="attr">"ylxk"</span>:<span class="literal">false</span>,<span class="attr">"yjsy"</span>:<span class="literal">true</span>,<span class="attr">"avgRank"</span>:<span class="number">4.5</span>,<span class="attr">"yxdm"</span>:<span class="string">"10006"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"7"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北京理工大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"工业和信息化部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"工科院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科"</span>,<span class="attr">"yldx"</span>:<span class="literal">true</span>,<span class="attr">"ylxk"</span>:<span class="literal">false</span>,<span class="attr">"yjsy"</span>:<span class="literal">true</span>,<span class="attr">"avgRank"</span>:<span class="number">4.5</span>,<span class="attr">"yxdm"</span>:<span class="string">"10007"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"8"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北京科技大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"教育部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"工科院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科/高职(专科)"</span>,<span class="attr">"yldx"</span>:<span class="literal">false</span>,<span class="attr">"ylxk"</span>:<span class="literal">true</span>,<span class="attr">"yjsy"</span>:<span class="literal">true</span>,<span class="attr">"avgRank"</span>:<span class="number">4.5</span>,<span class="attr">"yxdm"</span>:<span class="string">"10008"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"9"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北方工业大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"北京市教育委员会"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"工科院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科"</span>,<span class="attr">"yldx"</span>:<span class="literal">false</span>,<span class="attr">"ylxk"</span>:<span class="literal">false</span>,<span class="attr">"yjsy"</span>:<span class="literal">false</span>,<span class="attr">"avgRank"</span>:<span class="number">4.5</span>,<span class="attr">"yxdm"</span>:<span class="string">"10009"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"schId"</span>:<span class="string">"10"</span>,<span class="attr">"yxmc"</span>:<span class="string">"北京化工大学"</span>,<span class="attr">"ssmc"</span>:<span class="string">"北京"</span>,<span class="attr">"zgbmmc"</span>:<span class="string">"教育部"</span>,<span class="attr">"yxlxmc"</span>:<span class="string">"工科院校"</span>,<span class="attr">"xlcc"</span>:<span class="string">"本科/高职(专科)"</span>,<span class="attr">"yldx"</span>:<span class="literal">false</span>,<span class="attr">"ylxk"</span>:<span class="literal">true</span>,<span class="attr">"yjsy"</span>:<span class="literal">false</span>,<span class="attr">"avgRank"</span>:<span class="number">4.1</span>,<span class="attr">"yxdm"</span>:<span class="string">"10010"</span>&#125;],</span><br><span class="line">	<span class="attr">"totalPage"</span>:<span class="number">282</span>,</span><br><span class="line">    <span class="attr">"nextPageAvailable"</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"previousPageAvailable"</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"startOfNextPage"</span>:<span class="number">10</span>,</span><br><span class="line">    <span class="attr">"startOfPreviousPage"</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">"startOfLastPage"</span>:<span class="number">2810</span>,<span class="attr">"curPage"</span>:<span class="number">1</span>,<span class="attr">"size"</span>:<span class="number">10</span>&#125;,<span class="attr">"flag"</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<p>但每一个XHR对象只有10个院校信息，从上面这个json串也可以知道，总共有282页，也就是说总共有282个这样的XHR对象，而且名字都是<code>schsearch</code>，而且从上一张图可以看到，该网页请求方式是post。</p>
<p>通过<a href="https://www.jianshu.com/p/0a2277de01c8" target="_blank" rel="noopener">这篇博客：Python 爬虫-异步加载 - 简书</a>了解到使用requests模拟发送POST请求获取异步加载内容的方法。而在我要爬取的网页中，关键的就是json里面的这个<code>start</code>，因为注意到每个XHR对象<code>schsearch</code>里面，这个<code>start</code>是从0开始，以10递增的，从上面这个json串可以注意到，<code>&quot;startOfLastPage&quot;:2810</code>,也就是说<code>start</code>的最后一个取值是2810。那么就用个循环，让<code>start</code>从0，以10递增，直到2810，爬取总共282页的数据吧。通过</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">requests.post(url_post, data=&#123;<span class="string">'start'</span>: a*<span class="number">10</span>&#125;).text</span><br></pre></td></tr></table></figure>



<p>返回来之后的数据，是str类型的，然后用json库的<code>loads()</code>转换为字典类型。</p>
<h4 id="3-爬虫并存储"><a href="#3-爬虫并存储" class="headerlink" title="3. 爬虫并存储"></a>3. 爬虫并存储</h4><p>在<a href="https://blog.csdn.net/u012156341/article/details/89381751" target="_blank" rel="noopener">这篇博客：Python爬虫项目：爬取JSON数据存储Excel表格与存储图片<em>u012156341的专栏-CSDN博客</em></a>了解到将数据存储到Excel表格的方法，大概就是用到<code>pyexcel_xls</code>这个第三方库构造一个Excel的结构，然后将字典中对应部分的数据存到Excel对应的列中。</p>
<p>这一部分工作的代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pyexcel_xls</span><br><span class="line"></span><br><span class="line">url_post = <span class="string">'https://gaokao.chsi.com.cn/wap/sch/schsearch'</span></span><br><span class="line">excel_totalList = [[<span class="string">'院校代码'</span>, <span class="string">'院校名称'</span>, <span class="string">'所在地'</span>, <span class="string">'一流大学建设高校'</span>, <span class="string">'一流大学建设高校'</span>]]</span><br><span class="line">excel_dict = &#123;<span class="string">'院校信息'</span>: excel_totalList&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每一页10个院校信息，共282页</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">282</span>):</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># start从0开始，以10递增，直到2820</span></span><br><span class="line">    data = requests.post(url_post, data=&#123;<span class="string">'start'</span>: a*<span class="number">10</span>&#125;).text</span><br><span class="line">    <span class="comment"># 将json字符串转换成python字典</span></span><br><span class="line">    data_dict = json.loads(data)</span><br><span class="line">    <span class="comment"># 获取字典中需要的那部分数据</span></span><br><span class="line">    list = data_dict[<span class="string">'msg'</span>][<span class="string">'list'</span>]</span><br><span class="line">    print(list)</span><br><span class="line">    <span class="comment"># 遍历原来的字典的数据结构</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">        schId = item[<span class="string">'yxdm'</span>]</span><br><span class="line">        schName = item[<span class="string">'yxmc'</span>]</span><br><span class="line">        schAddr = item[<span class="string">'ssmc'</span>]</span><br><span class="line">        yldx = <span class="string">' '</span></span><br><span class="line">        <span class="keyword">if</span> item[<span class="string">'yldx'</span>]:</span><br><span class="line">            yldx = <span class="string">'一流大学建设高校'</span></span><br><span class="line">        ylxk = <span class="string">' '</span></span><br><span class="line">        <span class="keyword">if</span> item[<span class="string">'ylxk'</span>]:</span><br><span class="line">            ylxk = <span class="string">'一流学科建设高校'</span></span><br><span class="line">        item_list = [schId, schName, schAddr, yldx, ylxk]</span><br><span class="line">        excel_totalList.append(item_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存到Excel中</span></span><br><span class="line">pyexcel_xls.save_data(<span class="string">'schoolInfo.xls'</span>, excel_dict)</span><br></pre></td></tr></table></figure>



<h5 id="该部分小结"><a href="#该部分小结" class="headerlink" title="该部分小结"></a>该部分小结</h5><p>虽然这部分代码很短，其实确实也不难，但因为以前只会简单的静态网页爬虫，这种动态加载（AJAX）的网页还是后知后觉，所以走了很多弯路，Google也不知道查了多少次，幸好看到了一些很有用的博客。</p>
<h4 id="4-学校校徽图片"><a href="#4-学校校徽图片" class="headerlink" title="4. 学校校徽图片"></a>4. 学校校徽图片</h4><p>待续……</p>
]]></content>
      <tags>
        <tag>python, scraping</tag>
      </tags>
  </entry>
</search>
